openapi: 3.0.3
info:
  title: DEEL BACKEND TASK - OpenAPI 3.0
  description: |-
    DEEL BACKEND TASK
  version: 1.0.0
servers:
  - url: http://localhost:3001
paths:
  /contracts:
    get:
      tags:
        - contracts
      summary: List of contracts
      description: Returns a list of contracts belonging to a user (client or contractor), the list should only contain non terminated contracts.
      operationId: getContracts
      parameters:
        - in: header
          name: profile_id
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Contract'
        '400':
          description: Client error
        '401':
          description: Not a valid profile

  /contracts/{contractId}:
    get:
      tags:
        - contracts
      summary: Get contract by ID
      description: Add a new pet to the store
      operationId: addPet
      parameters:
        - in: header
          name: profile_id
          schema:
            type: string
          required: true
        - name: contractId
          in: path
          description: ID of the contract to get
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contract'
        '401':
          description: Not a valid profile

  /jobs/unpaid:
    get:
      tags:
        - jobs
      summary: Unpaid jobs list
      description:  Get all unpaid jobs for a user (either a client or contractor), for active contracts only.
      operationId: unpaidJobs
      parameters:
        - in: header
          name: profile_id
          schema:
            type: string
          required: true
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Job'

  /jobs/{jobId}/pay:
    post:
      tags:
        - jobs
      summary: Pay for the job
      description: Pay for a job, a client can only pay if his balance >= the amount to pay. The amount should be moved from the client's balance to the contractor balance.
      parameters:
        - in: header
          name: profile_id
          schema:
            type: string
          required: true
        - name: jobId
          in: path
          description: ID of the job to pay
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobPaid'
        default:
          description: successful operation

  /balances/deposit/{userID}:
    post:
      tags:
        - balances
      summary: Deposit money to the account
      description: Deposits money into the the the balance of a client, a client can't deposit more than 25% his total of jobs to pay. (at the deposit moment)
      parameters:
        - name: userID
          in: path
          description: ID of user
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DepositRequest'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DepositResponse'

  /admin/best-profession:
    get:
      tags:
        - admin
      summary: Profession that earned the most money
      description: Returns the profession that earned the most money (sum of jobs paid) for any contactor that worked in the query time range.
      parameters:
        - name: start
          in: query
          description: start date
          required: true
          schema:
            type: string
            format: date
        - name: end
          in: query
          description: end date
          required: true
          schema:
            type: string
            format: date
      responses:
        '200':
          description: succesful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BestProfession'

  /admin/best-clients:
    get:
      tags:
        - admin
      summary: Clients the paid the most for jobs
      description: Returns the clients the paid the most for jobs in the query time period. limit query parameter should be applied, default limit is 2
      parameters:
        - name: start
          in: query
          description: start date
          required: true
          schema:
            type: string
            format: date
        - name: end
          in: query
          description: end date
          required: true
          schema:
            type: string
            format: date
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            default: 2
      responses:
        '200':
          description: successfull response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Profile'


components:
  schemas:
    DepositRequest:
      title: Request to deposit account balance
      type: object
      properties:
        amount:
          type: number
      required:
        - amount
    DepositResponse:
      title: Response to deposit request
      type: object
      properties:
        success:
          description: Indicates sucess of operation
          type: boolean
    Contract:
      title: Contract response
      type: object
      properties:
        id:
          type: integer
          format: int64
        terms:
          type: string
        status:
          enum:
            - new
            - in_progress
            - terminated
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        ContractorId:
          type: integer
        ClientId:
          type: integer
    Job:
      title: Job response
      type: object
      properties:
        id:
          type: integer
          format: int64
        description:
          type: string
        price:
          type: number
          format: float
        paid:
          type: integer
        paymentDate:
          type: string
          format: date-time
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        ContractId:
          type: integer
    JobPaid:
      title: Job payment response
      type: object
      properties:
        jobId:
          type: integer
        paid:
          type: boolean
    BestProfession:
      title: Best profession response
      type: object
      properties:
        profession:
          type: string
        totalPaid:
          type: number
    Profile:
      title: Profile object
      type: object
      properties:

